import lara.util.ProcessExecutor;
import lara.Io;

var sobelDxVersions = Io.getAbsolutePath("./common/c/SobelDx_Versions");
var sobelDyVersions = Io.getAbsolutePath("./common/c/SobelDy_Versions");
var imageBlurVersions = Io.getAbsolutePath("./common/c/imageBlur_Versions");
var mainVersions = Io.getAbsolutePath("./benchmarks/tracking/src/c/mainVersions");
var makefileVersions = Io.getAbsolutePath("./common/makefiles/makefileVersions");

var speedupsHotspot = Io.getAbsolutePath("./benchmarks/tracking/data/fullhd/Speedups/hotspot");
var speedupsGlobal = Io.getAbsolutePath("./benchmarks/tracking/data/fullhd/Speedups/global");

var sobelDx = Io.getAbsolutePath("././common/c/calcSobel_dX.c");
var sobelDy = Io.getAbsolutePath("./common/c/calcSobel_dY.c");
var imageBlur = Io.getAbsolutePath("./common/c/imageBlur.c");
var script_tracking = Io.getAbsolutePath("./benchmarks/tracking/src/c/script_tracking.c");
var makefile = Io.getAbsolutePath("./common/makefiles/Makefile.common");	

var data = Io.getAbsolutePath("./benchmarks/tracking/data/fullhd");
var executor = new ProcessExecutor();

var numberOfExecutions = 10;

aspectdef Script_Tracking
	executor.setWorkingDir(Io.getAbsolutePath(data));


//	call GlobalBaselineO2;
//	call GlobalBaselineO3;
	call GlobalBaselineOfast;
//	
//	call Global_v1_O2;
//	call Global_v1_O3;
//	call Global_v1_Ofast;

	call Global_v2_Ofast;

	
//	call GlobalBaselineOfast_Vect;
//	call Global_v1_Ofast_Vect;
	
end

aspectdef GlobalBaselineO2
	var results = "";
	sobelDxContent = Io.readFile(sobelDxVersions + "/calcSobel_dX_base.c");
	sobelDyContent = Io.readFile(sobelDyVersions + "/calcSobel_dY_base.c");
	imageBlurContent = Io.readFile(imageBlurVersions + "/imageBlur_base.c");
	mainContent = Io.readFile(mainVersions + "/script_tracking_base.c");
	makefileContent = Io.readFile(makefileVersions + "/Makefile_O2.common");
		
	Io.writeFile(sobelDx, sobelDxContent);
	Io.writeFile(sobelDy, sobelDyContent);
	Io.writeFile(imageBlur, imageBlurContent);
	Io.writeFile(script_tracking, mainContent);
	Io.writeFile(makefile, makefileContent);
	
	println("Executing: Baseline. Measuring: Global. Flag: -O2");
	
	executor.execute("make", "compile");
	for(var i = 0; i < numberOfExecutions; i++) {
		executor.execute("./tracking ./");
		results += executor.getConsoleOutput();
	}
	Io.writeFile(speedupsGlobal + "/baseline_o2.txt", results);
end

aspectdef GlobalBaselineO3
	var results = "";
	sobelDxContent = Io.readFile(sobelDxVersions + "/calcSobel_dX_base.c");
	sobelDyContent = Io.readFile(sobelDyVersions + "/calcSobel_dY_base.c");
	imageBlurContent = Io.readFile(imageBlurVersions + "/imageBlur_base.c");
	mainContent = Io.readFile(mainVersions + "/script_tracking_base.c");
	makefileContent = Io.readFile(makefileVersions + "/Makefile_O3.common");
		
	Io.writeFile(sobelDx, sobelDxContent);
	Io.writeFile(sobelDy, sobelDyContent);
	Io.writeFile(imageBlur, imageBlurContent);
	Io.writeFile(script_tracking, mainContent);
	Io.writeFile(makefile, makefileContent);
	
	println("Executing: Baseline. Measuring: Global. Flag: -O3");
	
	executor.execute("make", "compile");
	for(var i = 0; i < numberOfExecutions; i++) {
		executor.execute("./tracking ./");
		results += executor.getConsoleOutput();
	}
	Io.writeFile(speedupsGlobal + "/baseline_o3.txt", results);
end

aspectdef GlobalBaselineOfast
	var results = "";
	sobelDxContent = Io.readFile(sobelDxVersions + "/calcSobel_dX_base.c");
	sobelDyContent = Io.readFile(sobelDyVersions + "/calcSobel_dY_base.c");
	imageBlurContent = Io.readFile(imageBlurVersions + "/imageBlur_base.c");
	mainContent = Io.readFile(mainVersions + "/script_tracking_base.c");
	makefileContent = Io.readFile(makefileVersions + "/Makefile_Ofast_ANTAREX.common");
		
	Io.writeFile(sobelDx, sobelDxContent);
	Io.writeFile(sobelDy, sobelDyContent);
	Io.writeFile(imageBlur, imageBlurContent);
	Io.writeFile(script_tracking, mainContent);
	Io.writeFile(makefile, makefileContent);
	
	println("Executing: Baseline. Measuring: Global. Flag: -Ofast");
	
	executor.execute("make", "compile");
	for(var i = 0; i < numberOfExecutions; i++) {
		executor.execute("./tracking ./");
		results += executor.getConsoleOutput();
	}
	Io.writeFile(speedupsGlobal + "/baseline_ofast.txt", results);
end


aspectdef Global_v1_O2
	var results = "";
	sobelDxContent = Io.readFile(sobelDxVersions + "/calcSobel_dX_v2.c");
	sobelDyContent = Io.readFile(sobelDyVersions + "/calcSobel_dY_v2.c");
	imageBlurContent = Io.readFile(imageBlurVersions + "/imageBlur_v2.c");
	mainContent = Io.readFile(mainVersions + "/script_tracking_base.c");
	makefileContent = Io.readFile(makefileVersions + "/Makefile_O2.common");
		
	Io.writeFile(sobelDx, sobelDxContent);
	Io.writeFile(sobelDy, sobelDyContent);
	Io.writeFile(imageBlur, imageBlurContent);
	Io.writeFile(script_tracking, mainContent);
	Io.writeFile(makefile, makefileContent);
	
	println("Executing: v1. Measuring: Global. Flag: -O2");
	
	executor.execute("make", "compile");
	for(var i = 0; i < numberOfExecutions; i++) {
		executor.execute("./tracking ./");
		results += executor.getConsoleOutput();
	}
	Io.writeFile(speedupsGlobal + "/v1_o2.txt", results);
end

aspectdef Global_v1_O3
	var results = "";
	sobelDxContent = Io.readFile(sobelDxVersions + "/calcSobel_dX_v2.c");
	sobelDyContent = Io.readFile(sobelDyVersions + "/calcSobel_dY_v2.c");
	imageBlurContent = Io.readFile(imageBlurVersions + "/imageBlur_v2.c");
	mainContent = Io.readFile(mainVersions + "/script_tracking_base.c");
	makefileContent = Io.readFile(makefileVersions + "/Makefile_O3.common");
		
	Io.writeFile(sobelDx, sobelDxContent);
	Io.writeFile(sobelDy, sobelDyContent);
	Io.writeFile(imageBlur, imageBlurContent);
	Io.writeFile(script_tracking, mainContent);
	Io.writeFile(makefile, makefileContent);
	
	println("Executing: v1. Measuring: Global. Flag: -O3");
	
	executor.execute("make", "compile");
	for(var i = 0; i < numberOfExecutions; i++) {
		executor.execute("./tracking ./");
		results += executor.getConsoleOutput();
	}
	Io.writeFile(speedupsGlobal + "/v1_o3.txt", results);
end

aspectdef Global_v1_Ofast
	var results = "";
	sobelDxContent = Io.readFile(sobelDxVersions + "/calcSobel_dX_v2.c");
	sobelDyContent = Io.readFile(sobelDyVersions + "/calcSobel_dY_v2.c");
	imageBlurContent = Io.readFile(imageBlurVersions + "/imageBlur_v2.c");
	mainContent = Io.readFile(mainVersions + "/script_tracking_base.c");
	makefileContent = Io.readFile(makefileVersions + "/Makefile_Ofast_ANTAREX.common");
		
	Io.writeFile(sobelDx, sobelDxContent);
	Io.writeFile(sobelDy, sobelDyContent);
	Io.writeFile(imageBlur, imageBlurContent);
	Io.writeFile(script_tracking, mainContent);
	Io.writeFile(makefile, makefileContent);
	
	println("Executing: v1. Measuring: Global. Flag: -Ofast");
	
	executor.execute("make", "compile");
	for(var i = 0; i < numberOfExecutions; i++) {
		executor.execute("./tracking ./");
		results += executor.getConsoleOutput();
	}
	Io.writeFile(speedupsGlobal + "/v1_ofast.txt", results);
end

aspectdef Global_v2_Ofast
	var results = "";
	sobelDxContent = Io.readFile(sobelDxVersions + "/calcSobel_dX_v3.c");
	sobelDyContent = Io.readFile(sobelDyVersions + "/calcSobel_dY_v3.c");
	imageBlurContent = Io.readFile(imageBlurVersions + "/imageBlur_v3.c");
	mainContent = Io.readFile(mainVersions + "/script_tracking_v3.c");
	makefileContent = Io.readFile(makefileVersions + "/Makefile_Ofast_ANTAREX.common");
		
	Io.writeFile(sobelDx, sobelDxContent);
	Io.writeFile(sobelDy, sobelDyContent);
	Io.writeFile(imageBlur, imageBlurContent);
	Io.writeFile(script_tracking, mainContent);
	Io.writeFile(makefile, makefileContent);
	
	println("Executing: v2. Measuring: Global. Flag: -Ofast");
	
	executor.execute("make", "compile");
	for(var i = 0; i < numberOfExecutions; i++) {
		executor.execute("./tracking ./");
		results += executor.getConsoleOutput();
	}
	Io.writeFile(speedupsGlobal + "/v2_ofast.txt", results);
end





aspectdef GlobalBaselineOfast_Vect
	var results = "";
	sobelDxContent = Io.readFile(sobelDxVersions + "/calcSobel_dX_base.c");
	sobelDyContent = Io.readFile(sobelDyVersions + "/calcSobel_dY_base.c");
	imageBlurContent = Io.readFile(imageBlurVersions + "/imageBlur_base.c");
	mainContent = Io.readFile(mainVersions + "/script_tracking_base.c");
	makefileContent = Io.readFile(makefileVersions + "/Makefile_Ofast_Vect.common");
		
	Io.writeFile(sobelDx, sobelDxContent);
	Io.writeFile(sobelDy, sobelDyContent);
	Io.writeFile(imageBlur, imageBlurContent);
	Io.writeFile(script_tracking, mainContent);
	Io.writeFile(makefile, makefileContent);
	
	println("Executing: Baseline. Measuring: Vectorization. Flag: -Ofast");
	
	executor.execute("make", "compile");
	results += executor.getConsoleOutput();
	Io.writeFile(speedupsGlobal + "/base_ofast_vect.txt", results);
end

aspectdef Global_v2_Ofast_Vect
	var results = "";
	sobelDxContent = Io.readFile(sobelDxVersions + "/calcSobel_dX_v3.c");
	sobelDyContent = Io.readFile(sobelDyVersions + "/calcSobel_dY_v3.c");
	imageBlurContent = Io.readFile(imageBlurVersions + "/imageBlur_v3.c");
	mainContent = Io.readFile(mainVersions + "/script_tracking_v3.c");
	makefileContent = Io.readFile(makefileVersions + "/Makefile_Ofast_Vect.common");
		
	Io.writeFile(sobelDx, sobelDxContent);
	Io.writeFile(sobelDy, sobelDyContent);
	Io.writeFile(imageBlur, imageBlurContent);
	Io.writeFile(script_tracking, mainContent);
	Io.writeFile(makefile, makefileContent);
	
	println("Executing: v2. Measuring: Vectorization. Flag: -Ofast");
	
	executor.execute("make", "compile");
	results += executor.getConsoleOutput();
	Io.writeFile(speedupsGlobal + "/v1_ofast_vect.txt", results);
end
