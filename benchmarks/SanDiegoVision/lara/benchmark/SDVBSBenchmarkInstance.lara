import lara.benchmark.ClavaBenchmarkInstance;
import lara.benchmark.SDVBSBenchmarkResources;

import clava.Clava;
import clava.ClavaJoinPoints;

import weaver.WeaverJps;

/**
 * Instance of a C SDVBS benchmark.
 */
function SDVBSBenchmarkInstance(benchmarkName, inputSize, version) {
    // Parent constructor
    ClavaBenchmarkInstance.call(this, "SDVBS-" + benchmarkName + "-" + inputSize);
	
	this._benchmarkName = benchmarkName;
	this._inputSize = inputSize;
	this._version = version;
	
	this._previousStandard = undefined;
	this._previousFlags = undefined;
	
	// Add -lm
	this.getCMaker().addLibs("m");
}
// Inheritance
SDVBSBenchmarkInstance.prototype = Object.create(ClavaBenchmarkInstance.prototype);


/*** IMPLEMENTATIONS ***/

SDVBSBenchmarkInstance.prototype._loadPrivate = function() {


	// Save current AST
	Clava.pushAst();
	
	// Clean AST
	WeaverJps.root().removeChildren();

	// Add code
	this._addCode();
	
	// Set standard
	this._previousStandard = Clava.getData().getStandard();
	Clava.getData().setStandard("c99");	

	// Set define
	this._previousFlags = Clava.getData().getFlags();
	var modifiedFlags = this._previousFlags + " -D" + this._inputSize + "_DATASET -DSDVBS_TIME";
	Clava.getData().setFlags(modifiedFlags);

	// Rebuild
	Clava.rebuild();

}



SDVBSBenchmarkInstance.prototype._closePrivate = function() {
	// Restore standard
	Clava.getData().setStandard(this._previousStandard);	
	this._previousStandard = undefined;

	// Restore flags
	Clava.getData().setFlags(this._previousFlags);
	this._previousFlags = undefined;	

	// Restore previous AST
	Clava.popAst();
		
}

SDVBSBenchmarkInstance.prototype._addCode = function() {

	// Create array with source files	
	var sourceFiles = [];
	sourceFiles.push(this._benchmarkName + ".c");
	sourceFiles.push(this._benchmarkName + ".h");	
	sourceFiles.push("sdvbs.c");
	sourceFiles.push("sdvbs.h");	

	// Add files to tree
	for(var filename of sourceFiles) {
		var file = SDVBSBenchmarkResources.getFile(this._version + "/" + filename);
		var clavaJPFile = ClavaJoinPoints.file(file);
		Clava.addFile(clavaJPFile);	
	}
}